#define GAP 7
externals {
   external: "elm";
}
collections{
   images {
      image: "icon_arrow_left.png" COMP;
      image: "icon_arrow_right.png" COMP;
      image: "icon_arrow_up.png" COMP;
      image: "icon_favorites.png" COMP;
      image: "icon_notfavorites.png" COMP;
      image: "icon_apps.png" COMP;
   }
   group { name: "verne.fs_op.copy";
      parts {
         swallow { "verne.progress"
            desc {
               rel1.offset: 0 5;
               rel2.relative: 1.0 0.0;
               align: 0.0 0.0;
               fixed: 1 1;
            }
         }
         external { "indicator"
            source: "elm/icon";
            desc { "default"
               rel1.relative: 0.0 1.0;
               rel1.to_y: "verne.progress";
               rel2.relative: 0.0 1.0;
               rel2.to_y: "verne.to";
               aspect: 1 1;
               align: 0.0 0.0;
               fixed: 1 1;
               params {
                  string: "icon" "edit-copy";
               }
            }
         }
         text { "descriptor_from"
            desc {
               rel1.relative: 1.0 1.0;
               rel1.to_y: "verne.progress";
               rel1.to_x: "indicator";
               rel2.relative: 1.0 0.0;
               rel2.to_y: "descriptor_to";
               rel2.to_x: "indicator";
               align: 0.0 0.5;
               text {
                  size: 10;
                  text: "From:";
                  min: 1 1;
                  ellipsis: -1.0;
               }
            }
         }
         text { "verne.from"
            desc {
               rel1.relative: 1.0 0.0;
               rel1.to: "descriptor_from";
               rel2.to_y: "verne.to";
               rel2.relative: 1.0 0.0;
               align: 1.0 0.5;
               text {
                  size: 10;
                  text: "<from>";
                  min: 1 1;
                  ellipsis: -1.0;
               }
            }
         }
         text { "descriptor_to"
            desc {
               rel1.relative: 1.0 1.0;
               rel1.to_x: "indicator";
               rel2.relative: 1.0 1.0;
               rel2.to_x: "indicator";
               align: 0.0 1.0;
               text {
                  size: 10;
                  text: "To:";
                  min: 1 1;
                  ellipsis: -1.0;
               }
            }
         }
         text { "verne.to"
            desc {
               rel1.to_x: "verne.from";
               rel1.relative: 0.0 1.0;
               rel2.relative: 1.0 1.0;
               align: 1.0 1.0;
               text {
                  size: 10;
                  text: "<to>";
                  min: 1 1;
                  ellipsis: -1.0;
               }
            }
         }
         rect { "border"
            desc {
               rel1.relative: 0.0 1.0;
               rel1.to: "indicator";
               rel2.relative: 1.0 1.0;
               rel2.to: "verne.to";
               rel2.offset: 0 1;
               color: 64 64 64 255;
            }
         }
      }
   }

   group { name: "verne.fs_op.move";
      inherit: "verne.fs_op.copy";
      parts {
         external { "indicator"
            source: "elm/icon";
            desc { "default"
               rel1.relative: 0.0 1.0;
               rel1.to_y: "verne.progress";
               rel2.relative: 0.0 1.0;
               rel2.to_y: "verne.to";
               aspect: 1 1;
               align: 0.0 0.0;
               params {
                  string: icon "edit-cut";
               }
            }
         }
      }
   }

   group { name: "verne.fs_op.remove";
      parts {
         external { "indicator"
            source: "elm/icon";
            desc {
               rel1.relative: 0.0 0.0;
               rel2.relative: 0.0 1.0;
               rel2.to_y: "description_del";
               aspect: 1 1;
               align: 0.0 0.0;
               params {
                  string: icon "edit-delete";
               }
            }
         }
         text { "description_del";
            desc { "default"
               rel1.to_x: "indicator";
               rel1.relative: 1.0 0.0;
               rel2.to_x: "indicator";
               rel2.relative: 1.0 0.0;
               align: 0.0 0.0;
               text {
                  size: 10;
                  text: "Removed:";
                  min: 1 1;
                  ellipsis: -1.0;
               }
            }
         }
         text { "verne.from";
            desc { "default"
               rel1.relative: 1.0 0.0;
               rel1.to: "description_del";
               rel2.to_y: "description_del";
               rel2.relative: 1.0 1.0;
               align: 0.0 0.0;
               text {
                  size: 10;
                  text: "<file>";
                  min: 1 1;
                  ellipsis: -1.0;
               }
            }
         }
         rect { "border"
            desc {
               rel1.relative: 0.0 1.0;
               rel1.to: "indicator";
               rel2.relative: 1.0 1.0;
               rel2.to: "verne.from";
               rel2.offset: 0 1;
               color: 64 64 64 255;
            }
         }
      }
   }

   group { name: "default_indicator";
      parts {
         image { "favorite"
            desc { "default"
               image.normal: "icon_favorites.png";
            }
            desc { "nofavorite"
               image.normal: "icon_notfavorites.png";
            }
         }
      }
      program {
         signal: "verne.default";
         source: "verne";
         action: STATE_SET "default";
         target: "favorite";
      }
      program {
         signal: "verne.notdefault";
         source: "verne";
         action: STATE_SET "nofavorite";
         target: "favorite";
      }
   }

   group { name: "headbar";
      parts {
         spacer { "back"
            desc { "default"
               aspect: 1 1;
               rel1.to_y: "verne.textbar";
               rel2.to_y: "verne.textbar";
               rel2.relative: 0.0 1.0;
               align: 0.0 0.0;
               fixed: 1 0;
            }
         }
         spacer { "forward"
            desc { "default"
               aspect: 1 1;
               rel1.to: "back";
               rel1.relative: 1.0 0.0;
               rel2.to: "back";
               rel2.relative: 1.0 1.0;
               align: 0.0 0.0;
               fixed: 1 0;
            }
         }
         image { "back_img"
            scale : 1;
            desc { "default"
               rel1.to: "back";
               rel2.to: "back";
               rel1.offset: GAP GAP;
               rel2.offset: -GAP -GAP;
               image.normal: "icon_arrow_left.png";
            }
         }
         image { "forward_img"
            scale : 1;
            desc { "default"
               rel1.to: "forward";
               rel2.to: "forward";
               rel1.offset: GAP GAP;
               rel2.offset: -GAP -GAP;
               image.normal: "icon_arrow_right.png";
            }
         }
         swallow { "verne.textbar"
            desc { "default"
               rel1.to_x: "forward";
               rel1.relative: 1.0 0.0;
               rel2.to_x: "fsaction";
               rel2.relative: 0.0 1.0;
            }
         }
         external { "fsaction"
            source: "elm/icon";
            desc { "default"
               rel1.relative: 1.0 0.0;
               rel2.to_y: "verne.textbar";
               rel2.relative: 1.0 1.0;
               aspect: 1 1;
               align: 1.0 0.0;
               fixed: 1 0;
               params {
                  string: icon edit-paste;
               }
            }
         }
      }
      program {
         signal: "mouse,clicked,*";
         source: "forward_img";
         action: SIGNAL_EMIT "verne.history.forward" "theme";
      }
      program {
         signal: "mouse,clicked,*";
         source: "back_img";
         action: SIGNAL_EMIT "verne.history.back" "theme";
      }
      program {
         signal: "mouse,clicked,*";
         source: "fsaction";
         action: SIGNAL_EMIT "verne.fsaction.popup" "theme";
      }
   }
}