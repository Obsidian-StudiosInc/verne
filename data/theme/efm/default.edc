#define GAP 7
externals {
   external: "elm";
}
collections{
   images {
      image: "icon_arrow_left.png" COMP;
      image: "icon_arrow_right.png" COMP;
      image: "icon_arrow_up.png" COMP;
      image: "icon_favorites.png" COMP;
      image: "icon_notfavorites.png" COMP;
      image: "icon_apps.png" COMP;
      image: "verne_clip.svg" COMP;
   }
   group { name: "verne.fs_op.copy";
      parts {
         swallow { "verne.progress"
            desc {
               rel1.offset: 0 5;
               rel2.relative: 1.0 0.0;
               align: 0.0 0.0;
               fixed: 1 1;
            }
         }
         external { "indicator"
            source: "elm/icon";
            desc { "default"
               rel1.relative: 0.0 1.0;
               rel1.to_y: "verne.progress";
               rel2.relative: 0.0 1.0;
               rel2.to_y: "verne.to";
               aspect: 1 1;
               align: 0.0 0.0;
               fixed: 1 1;
               params {
                  string: "icon" "edit-copy";
               }
            }
         }
         text { "descriptor_from"
            desc {
               rel1.relative: 1.0 1.0;
               rel1.to_y: "verne.progress";
               rel1.to_x: "indicator";
               rel2.relative: 1.0 0.0;
               rel2.to_y: "descriptor_to";
               rel2.to_x: "indicator";
               align: 0.0 0.5;
               text {
                  size: 10;
                  text: "From:";
                  min: 1 1;
                  ellipsis: -1.0;
               }
            }
         }
         text { "verne.from"
            desc {
               rel1.relative: 1.0 0.0;
               rel1.to: "descriptor_from";
               rel2.to_y: "verne.to";
               rel2.relative: 1.0 0.0;
               align: 1.0 0.5;
               text {
                  size: 10;
                  text: "<from>";
                  min: 1 1;
                  ellipsis: -1.0;
               }
            }
         }
         text { "descriptor_to"
            desc {
               rel1.relative: 1.0 1.0;
               rel1.to_x: "indicator";
               rel2.relative: 1.0 1.0;
               rel2.to_x: "indicator";
               align: 0.0 1.0;
               text {
                  size: 10;
                  text: "To:";
                  min: 1 1;
                  ellipsis: -1.0;
               }
            }
         }
         text { "verne.to"
            desc {
               rel1.to_x: "verne.from";
               rel1.relative: 0.0 1.0;
               rel2.relative: 1.0 1.0;
               align: 1.0 1.0;
               text {
                  size: 10;
                  text: "<to>";
                  min: 1 1;
                  ellipsis: -1.0;
               }
            }
         }
      }
   }

   group { name: "verne.fs_op.move";
      inherit: "verne.fs_op.copy";
      parts {
         external { "indicator"
            source: "elm/icon";
            desc { "default"
               rel1.relative: 0.0 1.0;
               rel1.to_y: "verne.progress";
               rel2.relative: 0.0 1.0;
               rel2.to_y: "verne.to";
               aspect: 1 1;
               align: 0.0 0.0;
               params {
                  string: icon "edit-cut";
               }
            }
         }
      }
   }

   group { name: "verne.fs_op.remove";
      parts {
         external { "indicator"
            source: "elm/icon";
            desc {
               rel1.relative: 0.0 0.0;
               rel2.relative: 0.0 1.0;
               rel2.to_y: "description_del";
               aspect: 1 1;
               align: 0.0 0.0;
               params {
                  string: icon "edit-delete";
               }
            }
         }
         text { "description_del";
            desc { "default"
               rel1.to_x: "indicator";
               rel1.relative: 1.0 0.0;
               rel2.to_x: "indicator";
               rel2.relative: 1.0 1.0;
               align: 0.0 0.5;
               text {
                  size: 10;
                  text: "Removed:";
                  min: 1 1;
                  ellipsis: -1.0;
               }
            }
         }
         text { "verne.from";
            desc { "default"
               rel1.to: "description_del";
               rel1.relative: 1.0 0.0;
               align: 0.5 0.0;
               text {
                  size: 10;
                  text: "<file>";
                  min: 1 1;
                  ellipsis: -1.0;
               }
            }
         }
      }
   }

   group { name: "default_indicator";
      parts {
         image { "favorite"
            desc { "default"
               image.normal: "icon_favorites.png";
            }
            desc { "nofavorite"
               image.normal: "icon_notfavorites.png";
            }
         }
      }
      program {
         signal: "verne.default";
         source: "verne";
         action: STATE_SET "default";
         target: "favorite";
      }
      program {
         signal: "verne.notdefault";
         source: "verne";
         action: STATE_SET "nofavorite";
         target: "favorite";
      }
   }

   group { name: "headbar";
      parts {
         spacer { "back"
            desc { "default"
               aspect: 1 1;
               rel1.to_y: "verne.textbar";
               rel2.to_y: "verne.textbar";
               rel2.relative: 0.0 1.0;
               align: 0.0 0.0;
               fixed: 1 0;
            }
         }
         spacer { "forward"
            desc { "default"
               aspect: 1 1;
               rel1.to: "back";
               rel1.relative: 1.0 0.0;
               rel2.to: "back";
               rel2.relative: 1.0 1.0;
               align: 0.0 0.0;
               fixed: 1 0;
            }
         }
         image { "back_img"
            scale : 1;
            desc { "default"
               rel1.to: "back";
               rel2.to: "back";
               rel1.offset: GAP GAP;
               rel2.offset: -GAP -GAP;
               image.normal: "icon_arrow_left.png";
            }
         }
         image { "forward_img"
            scale : 1;
            desc { "default"
               rel1.to: "forward";
               rel2.to: "forward";
               rel1.offset: GAP GAP;
               rel2.offset: -GAP -GAP;
               image.normal: "icon_arrow_right.png";
            }
         }
         swallow { "verne.textbar"
            desc { "default"
               rel1.to_x: "forward";
               rel1.relative: 1.0 0.0;
               rel2.to_x: "fsaction";
               rel2.relative: 0.0 1.0;
            }
         }
         external { "fsaction"
            source: "elm/icon";
            desc { "default"
               rel1.relative: 1.0 0.0;
               rel2.to_y: "verne.textbar";
               rel2.relative: 1.0 1.0;
               aspect: 1 1;
               align: 1.0 0.0;
               fixed: 1 0;
               params {
                  string: icon edit-paste;
               }
            }
         }
      }
      program {
         signal: "mouse,clicked,*";
         source: "forward_img";
         action: SIGNAL_EMIT "verne.history.forward" "theme";
      }
      program {
         signal: "mouse,clicked,*";
         source: "back_img";
         action: SIGNAL_EMIT "verne.history.back" "theme";
      }
      program {
         signal: "mouse,clicked,*";
         source: "fsaction";
         action: SIGNAL_EMIT "verne.fsaction.popup" "theme";
      }
   }
   group { "verne.about";
      styles {
         style {
            name: "aboutstyle";
            base: "font=Sans font_size=13 color=white wrap=word";
            	tag:  "b" "+ font_size= 18 color=white glow2_color=#9f9f9f glow_color=#6f6f6f";
         }
      }
      parts {
         rect { "eventcatch";
            desc { "default";
               color: 0 0 0 0;
            }
            desc { "view";
               color: 10 10 10 60;
            }
         }
         rect { "clip";
            desc { "default";
               rel1.to: "icon";
               rel1.relative: 0.25 0.20;
               rel2.to: "icon";
               rel2.relative: 0.75 0.80;
            }
         }
         rect { "screen";
            desc { "default";
               rel1.to: "clip";
               rel2.to: "clip";
               rel1.relative: 0.0 1.0;
               rel2.relative: 1.0 1.0;
               color: 0 0 0 0;
            }
            desc { "up";
               inherit: "default";
               rel1.relative: 0.0 0.0;
               rel2.relative: 1.0 0.0;
            }
         }
         textblock { "verne.authorship";
            clip_to: "clip";
            desc { "default";
               rel1.to: "screen";
               rel1.relative: 0.0 0.5;
               rel2.to: "screen";
               rel2.relative: 1.0 0.5;
               align: 0.0 0.0;
               text {
                  style: "aboutstyle";
                  text: "<b> Verne </b> <br>A filemanager based on elementary.

                  Authors:


                  test for important stuff so we know this works as expected <br>to see <br>how things <br>are going <br><br>";
                  min: 0 1;
               }
            }
            desc { "up";
               inherit: "default";
               align: 0.0 1.0;
            }
         }

         image { "icon";
            desc { "default";
               min: 300 300;
               aspect: 1 1;
               image {
                  normal: "verne_clip.svg";
               }
               rel1.relative: 0.5 1.0;
               rel2.relative: 0.5 0.5;
               align: 0.5 0.0;
            }
            desc { "view";
               inherit: "default";
               rel1.relative: 0.5 0.5;
               rel2.relative: 0.5 0.5;
               align: 0.5 0.5;
            }
         }
      }
      programs {
         program {
            signal: "begin";
            action: STATE_SET "view";
            transition: LINEAR 0.5;
            target: "icon";
            target: "eventcatch";
            after: "scroll";
         }
         program {
            signal: "mouse,clicked,*";
            source: "*";
            action: STATE_SET "default";
            transition: LINEAR 0.5;
            target: "icon";
            target: "eventcatch";
            after: "end";
         }
         program {
            name: "end";
            action: SIGNAL_EMIT "end" "";
         }
         program {
            name: "scroll";
            action: STATE_SET "up";
            transition: LINEAR 10.0;
            target: "verne.authorship";
            target: "screen";
            after: "reset";
         }
         program {
            name: "reset";
            action: STATE_SET "default";
            target: "verne.authorship";
            target: "screen";
            after: "begin_again";
         }
         program {
            name: "begin_again";
            action: SIGNAL_EMIT "begin" "";
         }
      }
   }
}