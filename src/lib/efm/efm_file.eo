struct Efm.File.Stat{
    size : long;
    uid : int;
    gid : int;
    mtime : long;
    ctime : long;
    atime : long;
}

enum Efm.File.Type {
    REGULAR_FILE , DIRECTORY, CHARACTER_DEVICE, BLOCK_DEVICE, FIFO, SYM_LINK, SOCKET
}

class Efm.File(Eo.Base)
{
    eo_prefix: efm_file_obj;
    methods {
        @property filename {
            get {

            }
            values {
                filename : const(char)*;
            }
        }
        @property path {
            get {

            }
            values {
                path : const(char)*;
            }
        }
        @property fileending {
            get {

            }
            values {
                path : const(char)*;
            }
        }
        @property mimetype {
            get {

            }
            values {
                mimetype : const(char)*;
            }
        }
        @property stat {
            get {

            }
            values {
                stat : Efm.File.Stat*;
            }
        }
        is_type {
            params {
                type: Efm.File.Type;
            }
            return : bool;
        }
        generate {
            /*@ A constructor of the Efm_File
                Once its called the file will be scheudled to get stat and mimetype of the file */
            params {
                @in filename : const(char)*;
            }

            return : bool;
        }
    }
    implements {
        Eo.Base.destructor;
    }
    constructors {
        .generate;
    }
    events {
        fsquery,done;
    }
}