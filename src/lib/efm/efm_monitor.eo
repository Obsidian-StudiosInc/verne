class Efm.Monitor(Eo.Base) {
    [[This object will monitor a given path.

      This means if in the given directory a file/directory is added the object will emit the event to notify about it.
      If a file itself gets deleted itself can be checked with the object passed by the event add
      If the monitor object is deleted all created files are deleted if you dont have a reference on it.
    ]]
    methods {
        start @class {
            [[Starts a monitor at the given directory.
              The Monitor will give notifications if a {file or dir} gets added in this directory]]
            params {
                @in directory : const(char)*; [[The directory to monitor, has to exist]]
                @in hidden_files : bool; [[True to show hidden files, false if not]]
                @in only_folder : bool; [[True to only show folders]]
            }
            return : Efm.Monitor*;
        }
        @property path {
            [[The Path which gets monitored]]
            get {

            }
            values {
                path : const(char)*;
            }
        }

        @property config_hidden_files {
            [[Configuration for handling of files which starts with a . .]]
            get {
                [[Get the configuration]]
            }
            set {
                [[Set the configuration]]
            }
            values {
                hidden : bool;
            }
        }

        @property config_only_folder {
            [[Configuration for handling of folder / files handling]]
            get {
                [[Get the configuration]]
            }
            set {
                [[Set the configuration]]
            }
            values {
                path : bool;
            }
        }
    }
    implements {
        Eo.Base.destructor;
    }
    events {
        file,hide : Efm.File*; [[If the buildin filter is changed and this file shoudlnt be published by the monitor anymore this is called]]
        file,add : Efm.File*; [[Called when a file was added]]
        error; [[called when the monitor got an error. The bahavoir after this event is unknown. The monitor should be deleted and never be used again!]]
    }
}