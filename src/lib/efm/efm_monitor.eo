interface Efm.Monitor {
    [[This object will monitor a given path.

      This means if in the given directory a file/directory is added the object will emit the event to notify about it.
      If a file itself gets deleted itself can be checked with the object passed by the event add
      If the monitor object is deleted all created files are deleted if you dont have a reference on it.
    ]]
    methods {
        @property filter {
            [[The filter which is used to check if a Efm.File should be populated or not

              If the filter changes all files are populated/unpopulated]]
            values {
                filter : Efm.Filter;
            }
        }
        @property file {
            get {
                [[returns the path this monitor is running on]]
            }
            values {
                path : Efm.File;
            }
        }
    }
    events {
        file,hide : Efm.File; [[If the buildin filter is changed and this file shoudlnt be published by the monitor anymore this is called]]
        file,add : Efm.File; [[Called when a file was added]]
        listing,done;
        error; [[called when the monitor got an error. The bahavoir after this event is unknown. The monitor should be deleted and never be used again!]]
    }
}