class Emous {
    methods {
        init_lib @class {
            [[Will init all needed libs.]]
            return : int;
        }
        init @class {
            [[This will start monitoring mountpoint changes and init all installed modules

              At first this calls init_lib
              Will result > 1 if everything went well or 0 if the init failed]]
            return : int;
        }
        shutdown @class {
            [[This will stop monitring the mountpoints and unload all installed modules
              And call shutdown_lib]]
        }
        shutdown_lib @class {
            [[This will shutdown all needed libs]]
        }
        util_size_convert @class {
            [[Will convert bytes into a nice looking string

              2048 will be converted to 20 MB

              or if exact is set to 20.2 MB
            ]]
            params {
                exact : bool; [[Set to true if you want to get the exact size with maximum 3 numbers after . .]]
                bytes : long; [[The Number of bytes to convert]]
            }

            return : char*; [[The nice looking string, needs to be freed!]]
        }
        util_device_name_get @class {
            [[Get the displayname of the device or a string which tells the size and the a generic name]]
            params {
                dev : Emous.Device*; [[The Device to call this funktions on]]
            }
            return : char*; [[The name needs to be freed]]
        }
    }
}