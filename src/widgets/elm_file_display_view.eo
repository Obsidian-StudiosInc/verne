
struct Elm.File.Display.View.DndFile{
   [[Struct to use when you have to five feedback to the view about your dnd selection]]
   x : int; [[x coord]]
   y : int; [[y coord]]
   w : int; [[width of the icon]]
   h : int; [[height of the icon]]
   file_icon : Elm.File.Icon*; [[The represented icon]]
}


interface Elm.File.Display.View {
   [[ Interface to abstract communication between the elm.file.display and the displaying view]]
   methods {
      name_get @class {
         [[ Return the Name of the this view. Will be displayed]]
         return : const(char)*;
      }
      item_get {
         [[Return the Pointer to a single object below the given coords.
           Or Null if there is none]]
         params {
            x : int;
            y : int;
         }
         return : Efm.File*;
      }
      items_select {
         [[Select all appearing files under this rect]]
         params {
            x : int;
            y : int;
            w : int;
            h : int;
         }
      }
      selection_get {
         [[Return the current selection of the view for dnd.
           This means x,y,w and h must be set correctly for the dnd animation]]
         return : list<Elm.File.Display.View.DndFile>*;
      }
      path_set {
         [[Set a new path to display]]
         params {
            dir : const(char)*;
         }
      }
      size_get {
         [[Give back the actual size where dnd and rect selection should work]]
         params {
            @out x : int;
            @out y : int;
            @out w : int;
            @out h : int;
         }
      }
   }
   events {
      item,select,simple : Efm.File*; [[ A item got selected "simple" like one click ]]
      item,select,choosen : Efm.File*; [[@ A item got _really_ selected like double clicked]]
      item,select,changed : list<Efm.File*>*; [[called when the selection has changed. Used to keep a internal list of all selected files.
      The pointer given to the event will just be updated each time the list is _never_ touched by the displayer. the view has to take care of freeing the list]]
   }
}