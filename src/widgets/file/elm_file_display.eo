
enum Elm.File.Display.Sort_Type {
   [[ The different sort types]]
   SIZE = 0, [[Sort from size]]
   DATE = 1, [[Sort from date]]
   NAME = 2, [[Sort from name]]
   EXTENSION = 3 [[Sort from extension]]
}

enum Elm.File.Display.Folder_Placement {
  [[Where to place the folders in the view if files and dirs are splited, each sector will be sorted for itself]]
  FIRST,  [[ Place folders at first]]
  LAST, [[Place folders at last]]
  TRIVIAL [[Do not put the folders anywhere, and sort files and dirs at once]]
}

struct Elm.File.Display.Menu_Hook {
   [[Used to pass the file and object at once to the event]]
   menu : Evas.Object*;
   file : Efm.File*;
}

class Elm_File_Display (Elm.Layout) {
   [[ The file display widget class used to display the files and dirs of a specific path]]
   methods {
      @property bookmarks_show {
         [[Enable the bookmars view if this is false the user is unable to move it it]]
         values {
            bookmark : bool; [[ true if you want to display the bookmarks, false if not]]
         }
      }
      @property filepreview_show {
         [[Enable the filepreview display or not]]
         values {
            filepreview : bool; [[ true if you want to display the filepreview, false if not]]
         }
      }
      @property filepreview {
         get {

         }
         values {
            filepreview : Evas.Object*;
         }
      }
      @property bookmarks {
         get {

         }
         values {
            bookmark : Evas.Object*;
         }
      }
      @property selector {
         get {

         }
         values {
            selector : Evas.Object*;
         }
      }
   }

   implements {
      Eo.Base.destructor;
      Eo.Base.constructor;
      Evas.Object_Smart.add;
   }

   events {
   }
}
